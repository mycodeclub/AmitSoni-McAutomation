@model IARTAutomationApp.Models.EmployeePI

@{
    ViewBag.Title = "Edit";

}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    var user = (IARTAutomationApp.Models.UserMaster)Session["User"];
    <input type="hidden" name="CustomerId" value="@user.CustomerId" />
    <div class="content">

        <ol class="breadcrumb bc-colored bg-success m-b-3">
            <li class="breadcrumb-item"><a href="#">Admin-HR</a></li>
            <li class="breadcrumb-item active">Edit Employees Personal Information</li>
        </ol>

        <div class="row">
            <div class="col-lg-12">
                <div class="card ">
                    <div class="card-header bg-blue">
                        <h5 class="text-white m-b-0">Edit Employee Personal Information</h5>
                    </div>
                    <div class="card-body">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <!--Row Employee Code-->
                        <h4 class="form-heading-1">Employee Code</h4>
                        <div class="row">

                            <!--Form Field Employee Code-->
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.Label("Employee Code", "Employee Code", htmlAttributes: new { })
                                    @Html.TextBoxFor(model => model.EmployeeCode, "", new { @class = "form-control", @id = "EmployeeCode", @readonly = true })
                                    @Html.ValidationMessageFor(model => model.EmployeeCode, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <!--EOF Employee Code-->
                            <!--Form Field Employee Status-->
                            <div class="col-md-6">
                                <div class="form-group">
                                    <!--This field has to be added in to database-->
                                    @Html.LabelFor(model => model.EmployeeStatus, htmlAttributes: new { })

                                    @Html.EditorFor(model => model.EmployeeStatus, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.EmployeeStatus, "", new { @class = "text-danger" })

                                    @* @Html.Label("Employee Status", htmlAttributes: new { })
                                        @Html.DropDownList("Status", new List<SelectListItem> {
                                            new SelectListItem { Text = "Select Status", Value = "Select Status", Selected=true},
                                            new SelectListItem { Text = "Active", Value = "Active"},
                                            new SelectListItem { Text = "On Leave", Value = "On Leave"},
                                            new SelectListItem { Text = "Retired", Value = "Retired"},
                                            new SelectListItem { Text = "Suspended", Value = "Suspended"}
                                        }, new { @class = "form-control", maxLength = "4" }) *@

                                </div>
                            </div>
                            <!--EOF Employee Status-->

                        </div>
                        <!--EOF Row Employee Code-->

                        <hr class="m-t-3 m-b-3">

                        <!--Row Personal Info-->
                        <h4 class="form-heading-1">Personal Info</h4>
                        <div class="row">

                            <!--Form Field Employee Email ID-->
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.EmpEmailId, htmlAttributes: new { })
                                    @Html.EditorFor(model => model.EmpEmailId, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.EmpEmailId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <!--EOF Employee Email ID-->
                            <!--Form Field Employee Permanent Address-->
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.PermanentAddress, htmlAttributes: new { })
                                    @Html.EditorFor(model => model.PermanentAddress, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.PermanentAddress, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <!--EOF Employee Permanent Address-->
                            <!--Form Field Employee Mobile Number-->
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.MobileNo, htmlAttributes: new { })
                                    @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <!--EOF Employee Mobile Number-->

                        </div>
                        <!--EOF Row Personal Info-->

                        <hr class="m-t-3 m-b-3">

                        <!--Row Kin Info-->
                        <h4 class="form-heading-1">Kin Info</h4>
                        <div class="row">

                            <!--Form Field Next of Kin Name-->
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.KinName, htmlAttributes: new { })
                                    @Html.EditorFor(model => model.KinName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.KinName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <!--EOF Next of Kin Name-->
                            <!--Form Field Email of Kin-->
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.EmailIdKin, htmlAttributes: new { })
                                    @Html.EditorFor(model => model.EmailIdKin, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.EmailIdKin, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <!--EOF Employee Email of Kin-->
                            <!--Form Field Address of Next of Kin-->
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.AddressNextOfKin, htmlAttributes: new { })
                                    @Html.EditorFor(model => model.AddressNextOfKin, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.AddressNextOfKin, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <!--EOF Address of Next of Kin-->
                            <!--Form Field State of Kin-->
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.StateNextOfKin, htmlAttributes: new { })
                                    @Html.DropDownList("StateNextOfKin", (SelectList)ViewBag.StateNextOfKins, htmlAttributes: new { @class = "form-control" })


                                    @Html.ValidationMessageFor(model => model.StateNextOfKin, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <!--EOF State of Kin-->
                            <!--Form Field LGA Next of Kin-->
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.LGAextOfKin, htmlAttributes: new { })

                                    @Html.DropDownList("LGAextOfKin", (SelectList)ViewBag.LGAextOfKins, htmlAttributes: new { @class = "form-control" })


                                    @Html.ValidationMessageFor(model => model.LGAextOfKin, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <!--EOF LGA Next of Kin-->
                            <!--Form Field Relation-->
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Relation, htmlAttributes: new { })
                                    @Html.EditorFor(model => model.Relation, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Relation, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <!--EOF Relation-->
                            <!--Form Field Phone Number Next of Kin-->
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.PhoneNoNextOfKin, htmlAttributes: new { })
                                    @Html.EditorFor(model => model.PhoneNoNextOfKin, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.PhoneNoNextOfKin, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <!--EOF Phone Number Next of Kin-->

                        </div>
                        <!--EOF Row Kin Info-->

                        <hr class="m-t-3 m-b-3">

                        <!--Row Beneficiary Info-->
                        <h4 class="form-heading-1">Beneficiary Info</h4>
                        <div class="row">

                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.NameOfStaffBenificiary, htmlAttributes: new { })
                                    @Html.EditorFor(model => model.NameOfStaffBenificiary, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.NameOfStaffBenificiary, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.PhoneOfStaffBenificiary, htmlAttributes: new { })
                                    @Html.EditorFor(model => model.PhoneOfStaffBenificiary, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.PhoneOfStaffBenificiary, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.AddressOfStaffBenificiary, htmlAttributes: new { })
                                    @Html.EditorFor(model => model.AddressOfStaffBenificiary, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.AddressOfStaffBenificiary, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </div>

                        <hr class="m-t-3 m-b-3">

                        <!--Row Beneficiary Info-->
                        <div class="row">

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="button" value="Update" class="btn btn-success" data-toggle="modal" data-target="#myModal" />
                                </div>
                            </div>

                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>



    <!-- Modal -->
    <div class="modal fade" id="myModal" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    @*<button type="button" class="close" data-ng-show="modal">&times;</button>*@
                    <h4 class="modal-title">Confirmation</h4>
                </div>
                <div class="modal-body">
                    <p>Do you want to Update this record</p>
                </div>
                <div class="modal-footer">
                    <input type="submit" value="Proceed" class="btn btn-success" data-show="modal" />

                    <button type="button" class="btn btn-outline-danger" data-dismiss="modal">Cancel</button>
                </div>
            </div>

        </div>
    </div>

}

<script src="http://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.10.2.min.js" type="text/javascript"></script>
<script src="http://ajax.aspnetcdn.com/ajax/jquery.ui/1.9.2/jquery-ui.min.js" type="text/javascript"></script>
<link href="http://ajax.aspnetcdn.com/ajax/jquery.ui/1.9.2/themes/blitzer/jquery-ui.css" rel="Stylesheet" type="text/css" />
<script type="text/javascript">
    $(document).ready(function () {
        debugger;

        $("#StateNextOfKin").change(function () {

            var stateId = $("#StateNextOfKin").val();

            $("#LGAextOfKin").empty();
            $.ajax({
                type: 'POST',
                url: '/EmployeePIs/GetLGAList/?stateId=' + stateId,
                datatype: 'application/json',
                contentType: 'application/json',
                success: function (zCity) {

                    $.each(zCity, function (i, zCity) {
                        $("#LGAextOfKin").append('<option value="'
                            + zCity.Value + '">'
                            + zCity.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed.' + ex);
                }
            });
            return false;
        })
    });
</script>
