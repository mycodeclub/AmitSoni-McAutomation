@model IARTAutomationApp.Models.EmployeeGI

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Edit", "Tenant", FormMethod.Post, new { enctype = "multipart/form-data" }))

{
    @Html.AntiForgeryToken()
    <input type="hidden" value="@Model.EmployeeGIId" name="EmployeeGIId" />
    <input type="hidden" value="@Model.EmployeeCode" name="EmployeeCode" />
    <input type="hidden" value="@Model.DateOfRetirement" name="DateOfRetirement" />
    <input type="hidden" value="@Model.CustomerId.Value" name="CustomerId" />
    <input type="hidden" value="@Model.CustomerMaster.CountryLogoIrl" name="CustomerMaster.CountryLogoIrl" />
    <input type="hidden" value="@Model.CustomerMaster.OrgLogoUrl" name="CustomerMaster.OrgLogoUrl" />


    <!-- Main content -->
    <div class="content">
        <ol class="breadcrumb bc-colored bg-success m-b-3">
            <li class="breadcrumb-item"><a href="#">Super Admin</a></li>
            <li class="breadcrumb-item active">Update Tenant</li>
        </ol>
        <div class="row">
            <div class="col-lg-12">
                <div class="card ">
                    <div class="card-header bg-blue">
                        <h5 class="text-white m-b-0">Add New Tenant</h5>
                    </div>
                    <div class="card-body">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <!--Row Employee Code-->
                        <h4 class="form-heading-1">Tenant Information</h4>
                        <div class="row">
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.Label("Country Logo", htmlAttributes: new { })<br />
                                    <input type="image" src="@Model.CustomerMaster.CountryLogoIrl" id="SelectedCountryLogo" alt="Student Image" class="image" height="200px" width="200px" />
                                    @Html.TextBoxFor(model => model.CustomerMaster.CountryLogo, new { type = "file", @class = "form-control", @id = "CountryLogo" })
                                    @Html.ValidationMessageFor(model => model.CustomerMaster.CountryLogo, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.Label("Organization Log", htmlAttributes: new { })<br />
                                    <input type="image" src="@Model.CustomerMaster.OrgLogoUrl" id="SelectedOrgLogo" alt="Student Image" class="image" height="200px" width="200px" />
                                    @Html.TextBoxFor(model => model.CustomerMaster.OrgLogo, new { type = "file", @class = "form-control", @id = "OrgLogo" })
                                    @Html.ValidationMessageFor(model => model.CustomerMaster.OrgLogo, "", new { @class = "text-danger" })
                                </div>
                            </div> <div class="col-md-4">
                                @Html.Label("Organization Address", htmlAttributes: new { })
                                <div class="form-group">
                                    @Html.TextAreaFor(model => model.CustomerMaster.Address, 9, 0, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.CustomerMaster.Address, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.Label("Organization Name", htmlAttributes: new { })
                                    @Html.EditorFor(model => model.CustomerMaster.OrgName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.CustomerMaster.OrgName, "", new { @class = "text-danger" })
                                </div>
                            </div> <div class="col-md-4">
                                <div class="form-group">
                                    @Html.Label("Organization Phone Number", htmlAttributes: new { })
                                    @Html.EditorFor(model => model.CustomerMaster.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.CustomerMaster.PhoneNumber, "", new { @class = "text-danger" })
                                </div>
                            </div> <div class="col-md-4">
                                <div class="form-group">
                                    @Html.Label("Organization Email", htmlAttributes: new { })
                                    @Html.EditorFor(model => model.CustomerMaster.Email, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.CustomerMaster.Email, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>  <div class="row">
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.Label("First Name", htmlAttributes: new { })
                                    @Html.EditorFor(model => model.First_Name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.First_Name, "", new { @class = "text-danger" })
                                </div>
                            </div> <div class="col-md-4">
                                <div class="form-group">
                                    @Html.Label("Middle Name", htmlAttributes: new { })
                                    @Html.EditorFor(model => model.Middle_Name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Middle_Name, "", new { @class = "text-danger" })
                                </div>
                            </div> <div class="col-md-4">
                                <div class="form-group">
                                    @Html.Label("Last Name (Surname)", htmlAttributes: new { })
                                    @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.Label("Title", htmlAttributes: new { })
                                    <select name="Title" class="form-control">
                                        <option value="Mr." selected> Mr.</option>
                                        <option value="Mrs."> Mrs.</option>
                                        <option value="Dr."> Dr.</option>
                                        <option value="Miss."> Miss.</option>
                                        <option value="Prof."> Prof.</option>
                                    </select>
                                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.Label("Gender", htmlAttributes: new { })
                                    <select name="Sex" class="form-control">
                                        <option value="Male" selected> Male</option>
                                        <option value="Female"> Female</option>
                                        <option value="Other"> Other</option>
                                    </select>
                                    @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.Label("Date Of Birth", htmlAttributes: new { })
                                    @*<input value="@Model.DateOfBirth.Value.ToString("dd/MM/yyyy")" class="form-control" name="DateOfBirth" />*@
                                    @Html.TextBoxFor(x => x.DateOfBirth, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "date" })

                                    @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.Label("State Of Origin", htmlAttributes: new { })
                                    @Html.DropDownListFor(model => model.StateOfOrigin, ViewBag.StateOfOrigins as IEnumerable<SelectListItem>, htmlAttributes: new { @class = "form-control", @id = "StateOfOrigin", @onchange = "LoadLga(this.options[this.selectedIndex].value)" })
                                    @Html.ValidationMessageFor(model => model.StateOfOrigin, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.Label("LGA", htmlAttributes: new { })
                                    <div id="LGAs">
                                        @Html.DropDownListFor(model => model.LGA, ViewBag.LGAs as IEnumerable<SelectListItem>, htmlAttributes: new { @class = "form-control" })
                                    </div>

                                    @Html.ValidationMessageFor(model => model.LGA, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.Label("Religion", htmlAttributes: new { })
                                    <select name="Religion" class="form-control">
                                        <option value="Christian" selected> Christian</option>
                                        <option value="Islam"> Islam</option>
                                        <option value="Others"> Other</option>
                                    </select>
                                    @Html.ValidationMessageFor(model => model.Religion, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.Label("Maiden Name", htmlAttributes: new { })
                                    @Html.EditorFor(model => model.Maiden_Name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Maiden_Name, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.Label("Login Name", htmlAttributes: new { })
                                    @Html.EditorFor(model => model.CustomerMaster.UserMaster.UserId, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.Maiden_Name, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.Label("Password", htmlAttributes: new { })
                                    @Html.EditorFor(model => model.CustomerMaster.UserMaster.Password, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Maiden_Name, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <input type="hidden" name="Unit_Research" value="Information Technology Unit" />
                        <input type="hidden" name="Section" value="Admin" />
                        <input type="hidden" name="StationOfDeployment" value="Ibadan" />
                        <input type="hidden" name="File_No" value="1" />
                        <input type="hidden" name="Grade_Level" value="1" />
                        <input type="hidden" name="Step" value="1" />
                        <input type="hidden" name="Cadre" value="Senior" />
                        <input type="hidden" name="Marital_Status" value="Single" />
                        <input type="hidden" name="PlaceOfBirth" value="Fill your place of birth" />
                        <input type="hidden" name="Home_Town" value="Enter your home town" />
                        <input type="hidden" name="ContactHomeAddress" value="Please enter you contact home address" />
                        <input type="hidden" name="FirstAppointmentDate" value=@DateTime.Now />
                        <input type="hidden" name="FirstAppointmentLocation" value="Please fill appointment location" />
                        <input type="hidden" name="ConfirmationDate" value=@DateTime.Now.AddDays(1) />
                        <input type="hidden" name="LastPromotionDate" value=@DateTime.Now />
                        <input type="hidden" name="Rank" value="Rank1" />
                        <div class="row">
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Update" class="btn btn-success" />
                                </div>
                            </div>
                        </div>
                        <!--Row Leave Details-->
                        <!--EOF Row Leave Details-->
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal -->
    <div class="modal fade" id="myModal" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    @*<button type="button" class="close" data-ng-show="modal">&times;</button>*@
                    <h4 class="modal-title">Confirmation</h4>
                </div>
                <div class="modal-body">
                    <p>Do you want to Update this record</p>
                </div>
                <div class="modal-footer">
                    <input type="submit" value="Proceed" class="btn btn-success" />
                    <button type="button" class="btn btn-outline-danger" data-dismiss="modal">Cancel</button>
                </div>
            </div>
        </div>
    </div>
}

@section scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            $('#CountryLogo').change(function (event) {
                $('#SelectedCountryLogo').attr('src', URL.createObjectURL(event.target.files[0]));
            });
            $('#OrgLogo').change(function (event) {
                $('#SelectedOrgLogo').attr('src', URL.createObjectURL(event.target.files[0]));
            });
        });
        function LoadLga(stateName) {
            $.ajax({
                url: 'GetCitiesByState?stateName=' + stateName,
                success: function (data) { $('#LGAs').html(data); }
            });
        }
    </script>
}
