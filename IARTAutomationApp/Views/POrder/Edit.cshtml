@model IARTAutomationApp.Models.PurchaseOrder
@{
    ViewBag.Title = "Edit Purchase Order";

}
<link rel="stylesheet" href="/Content/dist/plugins/dropify/dropify.min.css">
@using (Html.BeginForm("Edit", "POrder", FormMethod.Post, new { enctype = "multipart/form-data" }))

{
    @Html.AntiForgeryToken()
    var user = (IARTAutomationApp.Models.UserMaster)Session["User"];
    <input type="hidden" name="CustomerId" value="@user.CustomerId" />
    <div class="content">
        <ol class="breadcrumb bc-colored bg-success m-b-3">
            <li class="breadcrumb-item"><a href="#">Store</a></li>
            <li class="breadcrumb-item"><a href="#">Purchase Order</a></li>
            <li class="breadcrumb-item active">Edit Purchase Order</li>
        </ol>


        <div class="row">
            <div class="col-lg-12">
                <div class="card ">
                    <div class="card-header bg-blue">
                        <h5 class="text-white m-b-0">Purchase Order</h5>
                    </div>
                    <div class="card-body">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <h4 class="form-heading-1">Employee Code</h4>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @*<label for="exampleInputuname3" class="col-sm-3 control-label">Username*</label>*@
                                    @Html.LabelFor(model => model.EmployeeID, htmlAttributes: new { })
                                    @Html.EditorFor(model => model.EmployeeID, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.EmployeeID, "", new { @class = "text-danger" })
                                    @Html.HiddenFor(model => model.RecordId)
                                </div>
                            </div>
                        </div>

                        <h4 class="form-heading-1">Purchase Order Details</h4>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @*<label for="exampleInputuname3" class="col-sm-3 control-label">Username*</label>*@
                                    @Html.LabelFor(model => model.OrderNo, htmlAttributes: new { })
                                    @Html.EditorFor(model => model.OrderNo, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.OrderNo, "", new { @class = "text-danger" })

                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @*<label for="exampleInputuname3" class="col-sm-3 control-label">Username*</label>*@
                                    @Html.LabelFor(model => model.VendorId, htmlAttributes: new { })
                                    @Html.DropDownList("VendorId", (SelectList)ViewBag.Vendor, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.VendorId, "", new { @class = "text-danger" })

                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @*<label for="exampleInputuname3" class="col-sm-3 control-label">Username*</label>*@
                                    @Html.LabelFor(model => model.ItemId, htmlAttributes: new { })
                                    @Html.DropDownList("ItemId", (SelectList)ViewBag.Item, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ItemId, "", new { @class = "text-danger" })

                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ItemQunt, htmlAttributes: new { })
                                    @Html.EditorFor(model => model.ItemQunt, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ItemQunt, "", new { @class = "text-danger" })

                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ItemDesc, htmlAttributes: new { })
                                    @Html.EditorFor(model => model.ItemDesc, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ItemDesc, "", new { @class = "text-danger" })

                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ItemTax, htmlAttributes: new { })
                                    @Html.EditorFor(model => model.ItemTax, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ItemTax, "", new { @class = "text-danger" })

                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.DeliLoc, htmlAttributes: new { })
                                    @Html.EditorFor(model => model.DeliLoc, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.DeliLoc, "", new { @class = "text-danger" })

                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Terms, htmlAttributes: new { })
                                    @Html.EditorFor(model => model.Terms, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Terms, "", new { @class = "text-danger" })

                                </div>
                            </div>

                            <div class="col-lg-12">
                                <div class="form-group">
                                    <input type="button" value="Update" class="btn btn-success" data-toggle="modal" data-target="#myModal" />

                                </div>
                            </div>

                        </div>
                    </div>

                </div>
            </div>

        </div>
    </div>


    <!-- Modal -->
    <div class="modal fade" id="myModal" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    @* <button type="button" class="close" data-ng-show="modal">&times;</button>*@
                    <h4 class="modal-title">Confirmation</h4>
                </div>
                <div class="modal-body">
                    <p>Do you want to Save this Purchase Order</p>
                </div>
                <div class="modal-footer">
                    <input type="submit" value="Proceed" class="btn btn-success" data-show="modal" />

                    <button type="button" class="btn btn-danger" data-dismiss="modal">Cancel</button>
                </div>
            </div>

        </div>
    </div>

}


